pipeline {
    agent any

    stages {
        stage('Preparación') {
            steps {
                bat 'python -m venv venv'
                bat 'call venv\\Scripts\\activate && pip install -r requirements.txt'
            }
        }

        stage('Test') {
            steps {
                bat 'call venv\\Scripts\\activate && pytest --junitxml=report.xml || exit 0'
            }
            post {
                always {
                    junit 'report.xml'
                }
            }
        }

        stage('Coverage') {
            steps {
                bat 'call venv\\Scripts\\activate && coverage run -m pytest'
                bat 'call venv\\Scripts\\activate && coverage xml'
            }
            post {
                always {
                    cobertura cobertura.xml
                }
            }
        }

        stage('Análisis Estático (Flake8)') {
            steps {
                bat 'call venv\\Scripts\\activate && flake8 . --format=default || exit 0'
            }
        }

        stage('Security Test (bandit)') {
            steps {
                bat '''
                    whoami
                    hostname
                    echo %WORKSPACE%
                    mkdir reports
                    call venv\\Scripts\\activate
                    venv\\Scripts\\bandit -r app/ -f sarif -o reports\\bandit-report.sarif || exit 0
                '''
            }
            post {
                always {
                    recordIssues tools: [sarif(pattern: 'reports/bandit-report.sarif')]
                }
            }
        }

        stage('Performance') {
            steps {
                perfReport sourceDataFiles: 'report.jtl'
            }
        }
    }
}
