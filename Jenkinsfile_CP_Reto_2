pipeline {
    agent any

    environment {
        VENV = 'venv\\Scripts\\activate' // localmente    }

    stages {
        stage('Get Code') {
            steps {
                echo "Código clonado automáticamente desde el repositorio SCM."
            }
        }

        stage('Unit') {
            steps {
                bat '''
                    call %VENV%
                    pytest test/unit --junitxml=reports\\unit-results.xml
                '''
            }
            post {
                always {
                    junit 'reports/unit-results.xml'
                }
            }
        }

        stage('Static') {
            steps {
                bat '''
                    call %VENV%
                    flake8 src > reports/flake8.txt || exit 0
                '''
            }
            post {
                always {
                    recordIssues tools: [flake8(pattern: 'reports/flake8.txt')]
                }
            }
        }

        stage('Security Test') {
            steps {
                bat '''
                    call %VENV%
                    bandit -r src -f xml -o reports/bandit.xml || exit 0
                '''
            }
            post {
                always {
                    recordIssues tools: [bandit(pattern: 'reports/bandit.xml')]
                }
            }
        }

        stage('Coverage') {
            steps {
                bat '''
                    call %VENV%
                    coverage run -m pytest test/unit
                    coverage xml -o reports/coverage.xml
                '''
            }
            post {
                always {
                    cobertura coberturaReportFile: 'reports/coverage.xml'
                }
            }
        }

        stage('Performance') {
            steps {
                bat '''
                    jmeter -n -t jmeter/test-plan.jmx -l reports/results.jtl -e -o reports/html
                '''
            }
            post {
                always {
                    publishPerformanceReport sourceDataFiles: 'reports/results.jtl'
                }
            }
        }
    }

    post {
        always {
            echo 'Limpiando workspace'
            cleanWs()
        }
    }
}
