pipeline {
    agent any

    
    environment {
        VENV_DIR = 'venv'
    }

    stages {
        stage('Get Code') {
            steps {
                checkout scm
                bat 'whoami'
                bat 'hostname'
                bat 'echo $WORKSPACE'
            }
        }

        stage('Setup Environment') {
            steps {
                bat '''
                    C:\\Users\\USER\\AppData\\Local\\Programs\\Python\\Python313\\python.exe -m venv venv
                    call venv\\Scripts\\activate && where python && pip install -r requirements.txt
                    
                '''
            }
        }

        stage('Unit Tests') {
            steps {
                bat '''
                    call venv\\Scripts\\activate
                    set PYTHONPATH=%cd%
                    pytest test\\unit --junitxml=unit_report.xml
                    
                '''
            }
            post {
                always {
                    junit 'unit_report.xml'
                }
            }
        }

        stage('Static Analysis (flake8)') {
            steps {
                bat '''
                    call venv\\Scripts\\activate
                    venv\\Scripts\\flake8 app/ --exit-zero --format=default > flake8_report.txt
                '''
            }
            post {
                always {
                    echo 'Revisar el archivo flake8_report.txt para detalles del análisis'
                }
            }
        }

        stage('Security Test (bandit)') {
            steps {
                bat '''
                    call venv\\Scripts\\activate
                    venv\\Scripts\\bandit -r app/ -f xml -o bandit_report.xml || exit 0
                '''
            }
            post {
                always {
                    echo 'Análisis de seguridad completado. Verifica el archivo bandit_report.xml'
                }
            }
        }

        stage('Coverage') {
            steps {
                bat '''
                    call venv\\Scripts\\activate
                    venv\\Scripts\\coverage run -m pytest test\\unit
                    venv\\Scripts\\coverage xml -o coverage.xml
                    venv\\Scripts\\coverage html -d coverage_html
                '''
            }
            post {
                always {
                    publishHTML([
                        allowMissing: false,
                        alwaysLinkToLastBuild: true,
                        keepAll: true,
                        reportDir: 'coverage_html',
                        reportFiles: 'index.html',
                        reportName: 'Coverage Report'
                    ])
                }
            }
        }

        stage('Performance (JMeter)') {
            steps {
                bat '''
                     set JMETER_HOME=C:\\Users\\USER\\Downloads\\apache-jmeter-5.6.3\\apache-jmeter-5.6.3
                     set PATH=%JMETER_HOME%\\bin;%PATH%
                     mkdir jmeter\\report
                     jmeter -n -t test\\testplan\\sumar_restar.jmx -l jmeter\\report.jtl -e -o jmeter\\report

                '''
            }
            post {
                always {
                    perfReport sourceDataFiles: 'jmeter/report.jtl'
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
